/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: DatSketch (https://sketchfab.com/DatSketch)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/apple-iphone-13-pro-max-4328dea00e47497dbeac73c556121bc9
title: Apple iPhone 13 Pro Max
*/

import React, { useRef, useLayoutEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useThree } from "@react-three/fiber";

export default function Model3({ ...props }) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/Gio.gltf");

  let camera = useThree((state) => state.camera);

  useLayoutEffect(() => {
    camera.position.set(-0.1,0.4,5);
    materials.Body.color.set("#000000");

    if(window.matchMedia("(max-width: 48em)").matches){
      camera.fov = 18;
      camera.updateProjectionMatrix();
    }
        
  }, []);

  

  return (
    <group {...props} dispose={null}>
      <group position={[1.067, 6.6, 0.596]} rotation={[Math.PI / 2, 0, 0]} scale={56.128}>
        <mesh geometry={nodes.Curve001.geometry} material={materials['Material.004']} />
        <mesh geometry={nodes.Curve001_1.geometry} material={materials.Body} />
        <mesh geometry={nodes.Curve001_2.geometry} material={materials['Material.002']} />
        <mesh geometry={nodes.Curve001_3.geometry} material={materials['Material.003']} />
        <mesh geometry={nodes.Curve001_4.geometry} material={materials['SVGMat.001']} />
        <mesh geometry={nodes.Curve001_5.geometry} material={materials['Material.005']} />
        <mesh geometry={nodes.Curve001_6.geometry} material={materials['Material.006']} />
        <mesh geometry={nodes.Curve001_7.geometry} material={materials.Body} />
        <mesh geometry={nodes.Curve001_8.geometry} material={materials.nail} />
      </group>
    </group>
  );
}

useGLTF.preload("/Gio.gltf");
